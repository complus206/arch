/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace ClientConsole
{
#if !SILVERLIGHT
    [Serializable]
#endif
    public partial class Reserve : TBase
    {
        private int _reser_no;
        private long _card_no;
        private string _hotel_id;
        private string _room_type_id;
        private long _arrive_date;
        private long _leave_date;
        private string _time_early;
        private string _time_late;
        private short _num_room;
        private string _currency_ID;
        private bool _add_bed;
        private string _guest_name;
        private string _guest_type;
        private string _guest_sex;
        private string _contacter;
        private string _contacter_mobile;
        private string _contacter_sex;
        private string _reser_status;
        private string _reser_status1;
        private string _settle_status;
        private byte _print_status;
        private byte _fax_status;
        private string _email;
        private string _fax;
        private string _phone;
        private string _confirm_method;
        private string _confirm_client;
        private long _confirm_date;
        private string _other;
        private byte _other_enable;
        private string _op_user;
        private long _op_date;
        private string _es;
        private string _payment;
        private string _inspector;
        private long _lastchecked_date;
        private string _amendor;
        private long _amend_date;
        private string _sum_price;
        private string _sum_sign;
        private string _num_night;
        private string _room_no;
        private byte _arrive_now;
        private string _price_changed;
        private string _double_credit;
        private string _add_bed_price;
        private byte _add_bed_num;
        private string _op_ip;
        private string _hotel_confirm_num;
        private int _additional_status;
        private short _hotel_credit;
        private int _additional_statusI;
        private byte _Room_Credit;
        private string _Guest_Info;
        private byte _gage_status;
        private string _halfday_price;
        private string _halfday_sign_price;
        private string _gs_es;
        private byte _gp_settle_status;
        private string _guest_country;
        private int _guest_num;
        private byte _payment_way;
        private byte _payhotel_status;
        private string _trans_num;
        private int _order_from;
        private byte _price_source_type;
        private byte _room_num_type;
        private string _hotel_price_statu;
        private string _room_unique_id;
        private string _Credit_Card_No;
        private byte _Phone_Type;
        private byte _Contacter_Mobile_Type;

        public int Reser_no
        {
            get
            {
                return _reser_no;
            }
            set
            {
                __isset.reser_no = true;
                this._reser_no = value;
            }
        }

        public long Card_no
        {
            get
            {
                return _card_no;
            }
            set
            {
                __isset.card_no = true;
                this._card_no = value;
            }
        }

        public string Hotel_id
        {
            get
            {
                return _hotel_id;
            }
            set
            {
                __isset.hotel_id = true;
                this._hotel_id = value;
            }
        }

        public string Room_type_id
        {
            get
            {
                return _room_type_id;
            }
            set
            {
                __isset.room_type_id = true;
                this._room_type_id = value;
            }
        }

        public long Arrive_date
        {
            get
            {
                return _arrive_date;
            }
            set
            {
                __isset.arrive_date = true;
                this._arrive_date = value;
            }
        }

        public long Leave_date
        {
            get
            {
                return _leave_date;
            }
            set
            {
                __isset.leave_date = true;
                this._leave_date = value;
            }
        }

        public string Time_early
        {
            get
            {
                return _time_early;
            }
            set
            {
                __isset.time_early = true;
                this._time_early = value;
            }
        }

        public string Time_late
        {
            get
            {
                return _time_late;
            }
            set
            {
                __isset.time_late = true;
                this._time_late = value;
            }
        }

        public short Num_room
        {
            get
            {
                return _num_room;
            }
            set
            {
                __isset.num_room = true;
                this._num_room = value;
            }
        }

        public string Currency_ID
        {
            get
            {
                return _currency_ID;
            }
            set
            {
                __isset.currency_ID = true;
                this._currency_ID = value;
            }
        }

        public bool Add_bed
        {
            get
            {
                return _add_bed;
            }
            set
            {
                __isset.add_bed = true;
                this._add_bed = value;
            }
        }

        public string Guest_name
        {
            get
            {
                return _guest_name;
            }
            set
            {
                __isset.guest_name = true;
                this._guest_name = value;
            }
        }

        public string Guest_type
        {
            get
            {
                return _guest_type;
            }
            set
            {
                __isset.guest_type = true;
                this._guest_type = value;
            }
        }

        public string Guest_sex
        {
            get
            {
                return _guest_sex;
            }
            set
            {
                __isset.guest_sex = true;
                this._guest_sex = value;
            }
        }

        public string Contacter
        {
            get
            {
                return _contacter;
            }
            set
            {
                __isset.contacter = true;
                this._contacter = value;
            }
        }

        public string Contacter_mobile
        {
            get
            {
                return _contacter_mobile;
            }
            set
            {
                __isset.contacter_mobile = true;
                this._contacter_mobile = value;
            }
        }

        public string Contacter_sex
        {
            get
            {
                return _contacter_sex;
            }
            set
            {
                __isset.contacter_sex = true;
                this._contacter_sex = value;
            }
        }

        public string Reser_status
        {
            get
            {
                return _reser_status;
            }
            set
            {
                __isset.reser_status = true;
                this._reser_status = value;
            }
        }

        public string Reser_status1
        {
            get
            {
                return _reser_status1;
            }
            set
            {
                __isset.reser_status1 = true;
                this._reser_status1 = value;
            }
        }

        public string Settle_status
        {
            get
            {
                return _settle_status;
            }
            set
            {
                __isset.settle_status = true;
                this._settle_status = value;
            }
        }

        public byte Print_status
        {
            get
            {
                return _print_status;
            }
            set
            {
                __isset.print_status = true;
                this._print_status = value;
            }
        }

        public byte Fax_status
        {
            get
            {
                return _fax_status;
            }
            set
            {
                __isset.fax_status = true;
                this._fax_status = value;
            }
        }

        public string Email
        {
            get
            {
                return _email;
            }
            set
            {
                __isset.email = true;
                this._email = value;
            }
        }

        public string Fax
        {
            get
            {
                return _fax;
            }
            set
            {
                __isset.fax = true;
                this._fax = value;
            }
        }

        public string Phone
        {
            get
            {
                return _phone;
            }
            set
            {
                __isset.phone = true;
                this._phone = value;
            }
        }

        public string Confirm_method
        {
            get
            {
                return _confirm_method;
            }
            set
            {
                __isset.confirm_method = true;
                this._confirm_method = value;
            }
        }

        public string Confirm_client
        {
            get
            {
                return _confirm_client;
            }
            set
            {
                __isset.confirm_client = true;
                this._confirm_client = value;
            }
        }

        public long Confirm_date
        {
            get
            {
                return _confirm_date;
            }
            set
            {
                __isset.confirm_date = true;
                this._confirm_date = value;
            }
        }

        public string Other
        {
            get
            {
                return _other;
            }
            set
            {
                __isset.other = true;
                this._other = value;
            }
        }

        public byte Other_enable
        {
            get
            {
                return _other_enable;
            }
            set
            {
                __isset.other_enable = true;
                this._other_enable = value;
            }
        }

        public string Op_user
        {
            get
            {
                return _op_user;
            }
            set
            {
                __isset.op_user = true;
                this._op_user = value;
            }
        }

        public long Op_date
        {
            get
            {
                return _op_date;
            }
            set
            {
                __isset.op_date = true;
                this._op_date = value;
            }
        }

        public string Es
        {
            get
            {
                return _es;
            }
            set
            {
                __isset.es = true;
                this._es = value;
            }
        }

        public string Payment
        {
            get
            {
                return _payment;
            }
            set
            {
                __isset.payment = true;
                this._payment = value;
            }
        }

        public string Inspector
        {
            get
            {
                return _inspector;
            }
            set
            {
                __isset.inspector = true;
                this._inspector = value;
            }
        }

        public long Lastchecked_date
        {
            get
            {
                return _lastchecked_date;
            }
            set
            {
                __isset.lastchecked_date = true;
                this._lastchecked_date = value;
            }
        }

        public string Amendor
        {
            get
            {
                return _amendor;
            }
            set
            {
                __isset.amendor = true;
                this._amendor = value;
            }
        }

        public long Amend_date
        {
            get
            {
                return _amend_date;
            }
            set
            {
                __isset.amend_date = true;
                this._amend_date = value;
            }
        }

        public string Sum_price
        {
            get
            {
                return _sum_price;
            }
            set
            {
                __isset.sum_price = true;
                this._sum_price = value;
            }
        }

        public string Sum_sign
        {
            get
            {
                return _sum_sign;
            }
            set
            {
                __isset.sum_sign = true;
                this._sum_sign = value;
            }
        }

        public string Num_night
        {
            get
            {
                return _num_night;
            }
            set
            {
                __isset.num_night = true;
                this._num_night = value;
            }
        }

        public string Room_no
        {
            get
            {
                return _room_no;
            }
            set
            {
                __isset.room_no = true;
                this._room_no = value;
            }
        }

        public byte Arrive_now
        {
            get
            {
                return _arrive_now;
            }
            set
            {
                __isset.arrive_now = true;
                this._arrive_now = value;
            }
        }

        public string Price_changed
        {
            get
            {
                return _price_changed;
            }
            set
            {
                __isset.price_changed = true;
                this._price_changed = value;
            }
        }

        public string Double_credit
        {
            get
            {
                return _double_credit;
            }
            set
            {
                __isset.double_credit = true;
                this._double_credit = value;
            }
        }

        public string Add_bed_price
        {
            get
            {
                return _add_bed_price;
            }
            set
            {
                __isset.add_bed_price = true;
                this._add_bed_price = value;
            }
        }

        public byte Add_bed_num
        {
            get
            {
                return _add_bed_num;
            }
            set
            {
                __isset.add_bed_num = true;
                this._add_bed_num = value;
            }
        }

        public string Op_ip
        {
            get
            {
                return _op_ip;
            }
            set
            {
                __isset.op_ip = true;
                this._op_ip = value;
            }
        }

        public string Hotel_confirm_num
        {
            get
            {
                return _hotel_confirm_num;
            }
            set
            {
                __isset.hotel_confirm_num = true;
                this._hotel_confirm_num = value;
            }
        }

        public int Additional_status
        {
            get
            {
                return _additional_status;
            }
            set
            {
                __isset.additional_status = true;
                this._additional_status = value;
            }
        }

        public short Hotel_credit
        {
            get
            {
                return _hotel_credit;
            }
            set
            {
                __isset.hotel_credit = true;
                this._hotel_credit = value;
            }
        }

        public int Additional_statusI
        {
            get
            {
                return _additional_statusI;
            }
            set
            {
                __isset.additional_statusI = true;
                this._additional_statusI = value;
            }
        }

        public byte Room_Credit
        {
            get
            {
                return _Room_Credit;
            }
            set
            {
                __isset.Room_Credit = true;
                this._Room_Credit = value;
            }
        }

        public string Guest_Info
        {
            get
            {
                return _Guest_Info;
            }
            set
            {
                __isset.Guest_Info = true;
                this._Guest_Info = value;
            }
        }

        public byte Gage_status
        {
            get
            {
                return _gage_status;
            }
            set
            {
                __isset.gage_status = true;
                this._gage_status = value;
            }
        }

        public string Halfday_price
        {
            get
            {
                return _halfday_price;
            }
            set
            {
                __isset.halfday_price = true;
                this._halfday_price = value;
            }
        }

        public string Halfday_sign_price
        {
            get
            {
                return _halfday_sign_price;
            }
            set
            {
                __isset.halfday_sign_price = true;
                this._halfday_sign_price = value;
            }
        }

        public string Gs_es
        {
            get
            {
                return _gs_es;
            }
            set
            {
                __isset.gs_es = true;
                this._gs_es = value;
            }
        }

        public byte Gp_settle_status
        {
            get
            {
                return _gp_settle_status;
            }
            set
            {
                __isset.gp_settle_status = true;
                this._gp_settle_status = value;
            }
        }

        public string Guest_country
        {
            get
            {
                return _guest_country;
            }
            set
            {
                __isset.guest_country = true;
                this._guest_country = value;
            }
        }

        public int Guest_num
        {
            get
            {
                return _guest_num;
            }
            set
            {
                __isset.guest_num = true;
                this._guest_num = value;
            }
        }

        public byte Payment_way
        {
            get
            {
                return _payment_way;
            }
            set
            {
                __isset.payment_way = true;
                this._payment_way = value;
            }
        }

        public byte Payhotel_status
        {
            get
            {
                return _payhotel_status;
            }
            set
            {
                __isset.payhotel_status = true;
                this._payhotel_status = value;
            }
        }

        public string Trans_num
        {
            get
            {
                return _trans_num;
            }
            set
            {
                __isset.trans_num = true;
                this._trans_num = value;
            }
        }

        public int Order_from
        {
            get
            {
                return _order_from;
            }
            set
            {
                __isset.order_from = true;
                this._order_from = value;
            }
        }

        public byte Price_source_type
        {
            get
            {
                return _price_source_type;
            }
            set
            {
                __isset.price_source_type = true;
                this._price_source_type = value;
            }
        }

        public byte Room_num_type
        {
            get
            {
                return _room_num_type;
            }
            set
            {
                __isset.room_num_type = true;
                this._room_num_type = value;
            }
        }

        public string Hotel_price_statu
        {
            get
            {
                return _hotel_price_statu;
            }
            set
            {
                __isset.hotel_price_statu = true;
                this._hotel_price_statu = value;
            }
        }

        public string Room_unique_id
        {
            get
            {
                return _room_unique_id;
            }
            set
            {
                __isset.room_unique_id = true;
                this._room_unique_id = value;
            }
        }

        public string Credit_Card_No
        {
            get
            {
                return _Credit_Card_No;
            }
            set
            {
                __isset.Credit_Card_No = true;
                this._Credit_Card_No = value;
            }
        }

        public byte Phone_Type
        {
            get
            {
                return _Phone_Type;
            }
            set
            {
                __isset.Phone_Type = true;
                this._Phone_Type = value;
            }
        }

        public byte Contacter_Mobile_Type
        {
            get
            {
                return _Contacter_Mobile_Type;
            }
            set
            {
                __isset.Contacter_Mobile_Type = true;
                this._Contacter_Mobile_Type = value;
            }
        }


        public Isset __isset;
#if !SILVERLIGHT
        [Serializable]
#endif
        public struct Isset
        {
            public bool reser_no;
            public bool card_no;
            public bool hotel_id;
            public bool room_type_id;
            public bool arrive_date;
            public bool leave_date;
            public bool time_early;
            public bool time_late;
            public bool num_room;
            public bool currency_ID;
            public bool add_bed;
            public bool guest_name;
            public bool guest_type;
            public bool guest_sex;
            public bool contacter;
            public bool contacter_mobile;
            public bool contacter_sex;
            public bool reser_status;
            public bool reser_status1;
            public bool settle_status;
            public bool print_status;
            public bool fax_status;
            public bool email;
            public bool fax;
            public bool phone;
            public bool confirm_method;
            public bool confirm_client;
            public bool confirm_date;
            public bool other;
            public bool other_enable;
            public bool op_user;
            public bool op_date;
            public bool es;
            public bool payment;
            public bool inspector;
            public bool lastchecked_date;
            public bool amendor;
            public bool amend_date;
            public bool sum_price;
            public bool sum_sign;
            public bool num_night;
            public bool room_no;
            public bool arrive_now;
            public bool price_changed;
            public bool double_credit;
            public bool add_bed_price;
            public bool add_bed_num;
            public bool op_ip;
            public bool hotel_confirm_num;
            public bool additional_status;
            public bool hotel_credit;
            public bool additional_statusI;
            public bool Room_Credit;
            public bool Guest_Info;
            public bool gage_status;
            public bool halfday_price;
            public bool halfday_sign_price;
            public bool gs_es;
            public bool gp_settle_status;
            public bool guest_country;
            public bool guest_num;
            public bool payment_way;
            public bool payhotel_status;
            public bool trans_num;
            public bool order_from;
            public bool price_source_type;
            public bool room_num_type;
            public bool hotel_price_statu;
            public bool room_unique_id;
            public bool Credit_Card_No;
            public bool Phone_Type;
            public bool Contacter_Mobile_Type;
        }

        public Reserve()
        {
        }

        public void Read(TProtocol iprot)
        {
            TField field;
            iprot.ReadStructBegin();
            while (true)
            {
                field = iprot.ReadFieldBegin();
                if (field.Type == TType.Stop)
                {
                    break;
                }
                switch (field.ID)
                {
                    case 1:
                        if (field.Type == TType.I32)
                        {
                            Reser_no = iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 2:
                        if (field.Type == TType.I64)
                        {
                            Card_no = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 3:
                        if (field.Type == TType.String)
                        {
                            Hotel_id = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 4:
                        if (field.Type == TType.String)
                        {
                            Room_type_id = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 5:
                        if (field.Type == TType.I64)
                        {
                            Arrive_date = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 6:
                        if (field.Type == TType.I64)
                        {
                            Leave_date = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 7:
                        if (field.Type == TType.String)
                        {
                            Time_early = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 8:
                        if (field.Type == TType.String)
                        {
                            Time_late = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 9:
                        if (field.Type == TType.I16)
                        {
                            Num_room = iprot.ReadI16();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 10:
                        if (field.Type == TType.String)
                        {
                            Currency_ID = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 11:
                        if (field.Type == TType.Bool)
                        {
                            Add_bed = iprot.ReadBool();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 12:
                        if (field.Type == TType.String)
                        {
                            Guest_name = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 13:
                        if (field.Type == TType.String)
                        {
                            Guest_type = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 14:
                        if (field.Type == TType.String)
                        {
                            Guest_sex = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 15:
                        if (field.Type == TType.String)
                        {
                            Contacter = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 16:
                        if (field.Type == TType.String)
                        {
                            Contacter_mobile = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 17:
                        if (field.Type == TType.String)
                        {
                            Contacter_sex = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 18:
                        if (field.Type == TType.String)
                        {
                            Reser_status = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 19:
                        if (field.Type == TType.String)
                        {
                            Reser_status1 = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 20:
                        if (field.Type == TType.String)
                        {
                            Settle_status = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 21:
                        if (field.Type == TType.Byte)
                        {
                            Print_status = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 22:
                        if (field.Type == TType.Byte)
                        {
                            Fax_status = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 23:
                        if (field.Type == TType.String)
                        {
                            Email = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 24:
                        if (field.Type == TType.String)
                        {
                            Fax = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 25:
                        if (field.Type == TType.String)
                        {
                            Phone = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 26:
                        if (field.Type == TType.String)
                        {
                            Confirm_method = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 27:
                        if (field.Type == TType.String)
                        {
                            Confirm_client = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 28:
                        if (field.Type == TType.I64)
                        {
                            Confirm_date = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 29:
                        if (field.Type == TType.String)
                        {
                            Other = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 30:
                        if (field.Type == TType.Byte)
                        {
                            Other_enable = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 31:
                        if (field.Type == TType.String)
                        {
                            Op_user = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 32:
                        if (field.Type == TType.I64)
                        {
                            Op_date = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 33:
                        if (field.Type == TType.String)
                        {
                            Es = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 34:
                        if (field.Type == TType.String)
                        {
                            Payment = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 35:
                        if (field.Type == TType.String)
                        {
                            Inspector = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 36:
                        if (field.Type == TType.I64)
                        {
                            Lastchecked_date = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 37:
                        if (field.Type == TType.String)
                        {
                            Amendor = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 38:
                        if (field.Type == TType.I64)
                        {
                            Amend_date = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 39:
                        if (field.Type == TType.String)
                        {
                            Sum_price = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 40:
                        if (field.Type == TType.String)
                        {
                            Sum_sign = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 41:
                        if (field.Type == TType.String)
                        {
                            Num_night = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 42:
                        if (field.Type == TType.String)
                        {
                            Room_no = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 43:
                        if (field.Type == TType.Byte)
                        {
                            Arrive_now = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 44:
                        if (field.Type == TType.String)
                        {
                            Price_changed = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 45:
                        if (field.Type == TType.String)
                        {
                            Double_credit = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 46:
                        if (field.Type == TType.String)
                        {
                            Add_bed_price = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 47:
                        if (field.Type == TType.Byte)
                        {
                            Add_bed_num = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 48:
                        if (field.Type == TType.String)
                        {
                            Op_ip = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 49:
                        if (field.Type == TType.String)
                        {
                            Hotel_confirm_num = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 50:
                        if (field.Type == TType.I32)
                        {
                            Additional_status = iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 51:
                        if (field.Type == TType.I16)
                        {
                            Hotel_credit = iprot.ReadI16();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 52:
                        if (field.Type == TType.I32)
                        {
                            Additional_statusI = iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 53:
                        if (field.Type == TType.Byte)
                        {
                            Room_Credit = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 54:
                        if (field.Type == TType.String)
                        {
                            Guest_Info = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 55:
                        if (field.Type == TType.Byte)
                        {
                            Gage_status = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 56:
                        if (field.Type == TType.String)
                        {
                            Halfday_price = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 57:
                        if (field.Type == TType.String)
                        {
                            Halfday_sign_price = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 58:
                        if (field.Type == TType.String)
                        {
                            Gs_es = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 59:
                        if (field.Type == TType.Byte)
                        {
                            Gp_settle_status = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 60:
                        if (field.Type == TType.String)
                        {
                            Guest_country = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 61:
                        if (field.Type == TType.I32)
                        {
                            Guest_num = iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 62:
                        if (field.Type == TType.Byte)
                        {
                            Payment_way = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 63:
                        if (field.Type == TType.Byte)
                        {
                            Payhotel_status = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 64:
                        if (field.Type == TType.String)
                        {
                            Trans_num = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 65:
                        if (field.Type == TType.I32)
                        {
                            Order_from = iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 66:
                        if (field.Type == TType.Byte)
                        {
                            Price_source_type = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 67:
                        if (field.Type == TType.Byte)
                        {
                            Room_num_type = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 68:
                        if (field.Type == TType.String)
                        {
                            Hotel_price_statu = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 69:
                        if (field.Type == TType.String)
                        {
                            Room_unique_id = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 70:
                        if (field.Type == TType.String)
                        {
                            Credit_Card_No = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 71:
                        if (field.Type == TType.Byte)
                        {
                            Phone_Type = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 72:
                        if (field.Type == TType.Byte)
                        {
                            Contacter_Mobile_Type = iprot.ReadByte();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    default:
                        TProtocolUtil.Skip(iprot, field.Type);
                        break;
                }
                iprot.ReadFieldEnd();
            }
            iprot.ReadStructEnd();
        }

        public void Write(TProtocol oprot)
        {
            TStruct struc = new TStruct("Reserve");
            oprot.WriteStructBegin(struc);
            TField field = new TField();
            if (__isset.reser_no)
            {
                field.Name = "reser_no";
                field.Type = TType.I32;
                field.ID = 1;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32(Reser_no);
                oprot.WriteFieldEnd();
            }
            if (__isset.card_no)
            {
                field.Name = "card_no";
                field.Type = TType.I64;
                field.ID = 2;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Card_no);
                oprot.WriteFieldEnd();
            }
            if (Hotel_id != null && __isset.hotel_id)
            {
                field.Name = "hotel_id";
                field.Type = TType.String;
                field.ID = 3;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Hotel_id);
                oprot.WriteFieldEnd();
            }
            if (Room_type_id != null && __isset.room_type_id)
            {
                field.Name = "room_type_id";
                field.Type = TType.String;
                field.ID = 4;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Room_type_id);
                oprot.WriteFieldEnd();
            }
            if (__isset.arrive_date)
            {
                field.Name = "arrive_date";
                field.Type = TType.I64;
                field.ID = 5;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Arrive_date);
                oprot.WriteFieldEnd();
            }
            if (__isset.leave_date)
            {
                field.Name = "leave_date";
                field.Type = TType.I64;
                field.ID = 6;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Leave_date);
                oprot.WriteFieldEnd();
            }
            if (Time_early != null && __isset.time_early)
            {
                field.Name = "time_early";
                field.Type = TType.String;
                field.ID = 7;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Time_early);
                oprot.WriteFieldEnd();
            }
            if (Time_late != null && __isset.time_late)
            {
                field.Name = "time_late";
                field.Type = TType.String;
                field.ID = 8;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Time_late);
                oprot.WriteFieldEnd();
            }
            if (__isset.num_room)
            {
                field.Name = "num_room";
                field.Type = TType.I16;
                field.ID = 9;
                oprot.WriteFieldBegin(field);
                oprot.WriteI16(Num_room);
                oprot.WriteFieldEnd();
            }
            if (Currency_ID != null && __isset.currency_ID)
            {
                field.Name = "currency_ID";
                field.Type = TType.String;
                field.ID = 10;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Currency_ID);
                oprot.WriteFieldEnd();
            }
            if (__isset.add_bed)
            {
                field.Name = "add_bed";
                field.Type = TType.Bool;
                field.ID = 11;
                oprot.WriteFieldBegin(field);
                oprot.WriteBool(Add_bed);
                oprot.WriteFieldEnd();
            }
            if (Guest_name != null && __isset.guest_name)
            {
                field.Name = "guest_name";
                field.Type = TType.String;
                field.ID = 12;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Guest_name);
                oprot.WriteFieldEnd();
            }
            if (Guest_type != null && __isset.guest_type)
            {
                field.Name = "guest_type";
                field.Type = TType.String;
                field.ID = 13;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Guest_type);
                oprot.WriteFieldEnd();
            }
            if (Guest_sex != null && __isset.guest_sex)
            {
                field.Name = "guest_sex";
                field.Type = TType.String;
                field.ID = 14;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Guest_sex);
                oprot.WriteFieldEnd();
            }
            if (Contacter != null && __isset.contacter)
            {
                field.Name = "contacter";
                field.Type = TType.String;
                field.ID = 15;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Contacter);
                oprot.WriteFieldEnd();
            }
            if (Contacter_mobile != null && __isset.contacter_mobile)
            {
                field.Name = "contacter_mobile";
                field.Type = TType.String;
                field.ID = 16;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Contacter_mobile);
                oprot.WriteFieldEnd();
            }
            if (Contacter_sex != null && __isset.contacter_sex)
            {
                field.Name = "contacter_sex";
                field.Type = TType.String;
                field.ID = 17;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Contacter_sex);
                oprot.WriteFieldEnd();
            }
            if (Reser_status != null && __isset.reser_status)
            {
                field.Name = "reser_status";
                field.Type = TType.String;
                field.ID = 18;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Reser_status);
                oprot.WriteFieldEnd();
            }
            if (Reser_status1 != null && __isset.reser_status1)
            {
                field.Name = "reser_status1";
                field.Type = TType.String;
                field.ID = 19;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Reser_status1);
                oprot.WriteFieldEnd();
            }
            if (Settle_status != null && __isset.settle_status)
            {
                field.Name = "settle_status";
                field.Type = TType.String;
                field.ID = 20;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Settle_status);
                oprot.WriteFieldEnd();
            }
            if (__isset.print_status)
            {
                field.Name = "print_status";
                field.Type = TType.Byte;
                field.ID = 21;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Print_status);
                oprot.WriteFieldEnd();
            }
            if (__isset.fax_status)
            {
                field.Name = "fax_status";
                field.Type = TType.Byte;
                field.ID = 22;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Fax_status);
                oprot.WriteFieldEnd();
            }
            if (Email != null && __isset.email)
            {
                field.Name = "email";
                field.Type = TType.String;
                field.ID = 23;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Email);
                oprot.WriteFieldEnd();
            }
            if (Fax != null && __isset.fax)
            {
                field.Name = "fax";
                field.Type = TType.String;
                field.ID = 24;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Fax);
                oprot.WriteFieldEnd();
            }
            if (Phone != null && __isset.phone)
            {
                field.Name = "phone";
                field.Type = TType.String;
                field.ID = 25;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Phone);
                oprot.WriteFieldEnd();
            }
            if (Confirm_method != null && __isset.confirm_method)
            {
                field.Name = "confirm_method";
                field.Type = TType.String;
                field.ID = 26;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Confirm_method);
                oprot.WriteFieldEnd();
            }
            if (Confirm_client != null && __isset.confirm_client)
            {
                field.Name = "confirm_client";
                field.Type = TType.String;
                field.ID = 27;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Confirm_client);
                oprot.WriteFieldEnd();
            }
            if (__isset.confirm_date)
            {
                field.Name = "confirm_date";
                field.Type = TType.I64;
                field.ID = 28;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Confirm_date);
                oprot.WriteFieldEnd();
            }
            if (Other != null && __isset.other)
            {
                field.Name = "other";
                field.Type = TType.String;
                field.ID = 29;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Other);
                oprot.WriteFieldEnd();
            }
            if (__isset.other_enable)
            {
                field.Name = "other_enable";
                field.Type = TType.Byte;
                field.ID = 30;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Other_enable);
                oprot.WriteFieldEnd();
            }
            if (Op_user != null && __isset.op_user)
            {
                field.Name = "op_user";
                field.Type = TType.String;
                field.ID = 31;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Op_user);
                oprot.WriteFieldEnd();
            }
            if (__isset.op_date)
            {
                field.Name = "op_date";
                field.Type = TType.I64;
                field.ID = 32;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Op_date);
                oprot.WriteFieldEnd();
            }
            if (Es != null && __isset.es)
            {
                field.Name = "es";
                field.Type = TType.String;
                field.ID = 33;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Es);
                oprot.WriteFieldEnd();
            }
            if (Payment != null && __isset.payment)
            {
                field.Name = "payment";
                field.Type = TType.String;
                field.ID = 34;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Payment);
                oprot.WriteFieldEnd();
            }
            if (Inspector != null && __isset.inspector)
            {
                field.Name = "inspector";
                field.Type = TType.String;
                field.ID = 35;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Inspector);
                oprot.WriteFieldEnd();
            }
            if (__isset.lastchecked_date)
            {
                field.Name = "lastchecked_date";
                field.Type = TType.I64;
                field.ID = 36;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Lastchecked_date);
                oprot.WriteFieldEnd();
            }
            if (Amendor != null && __isset.amendor)
            {
                field.Name = "amendor";
                field.Type = TType.String;
                field.ID = 37;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Amendor);
                oprot.WriteFieldEnd();
            }
            if (__isset.amend_date)
            {
                field.Name = "amend_date";
                field.Type = TType.I64;
                field.ID = 38;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Amend_date);
                oprot.WriteFieldEnd();
            }
            if (Sum_price != null && __isset.sum_price)
            {
                field.Name = "sum_price";
                field.Type = TType.String;
                field.ID = 39;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Sum_price);
                oprot.WriteFieldEnd();
            }
            if (Sum_sign != null && __isset.sum_sign)
            {
                field.Name = "sum_sign";
                field.Type = TType.String;
                field.ID = 40;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Sum_sign);
                oprot.WriteFieldEnd();
            }
            if (Num_night != null && __isset.num_night)
            {
                field.Name = "num_night";
                field.Type = TType.String;
                field.ID = 41;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Num_night);
                oprot.WriteFieldEnd();
            }
            if (Room_no != null && __isset.room_no)
            {
                field.Name = "room_no";
                field.Type = TType.String;
                field.ID = 42;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Room_no);
                oprot.WriteFieldEnd();
            }
            if (__isset.arrive_now)
            {
                field.Name = "arrive_now";
                field.Type = TType.Byte;
                field.ID = 43;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Arrive_now);
                oprot.WriteFieldEnd();
            }
            if (Price_changed != null && __isset.price_changed)
            {
                field.Name = "price_changed";
                field.Type = TType.String;
                field.ID = 44;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Price_changed);
                oprot.WriteFieldEnd();
            }
            if (Double_credit != null && __isset.double_credit)
            {
                field.Name = "double_credit";
                field.Type = TType.String;
                field.ID = 45;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Double_credit);
                oprot.WriteFieldEnd();
            }
            if (Add_bed_price != null && __isset.add_bed_price)
            {
                field.Name = "add_bed_price";
                field.Type = TType.String;
                field.ID = 46;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Add_bed_price);
                oprot.WriteFieldEnd();
            }
            if (__isset.add_bed_num)
            {
                field.Name = "add_bed_num";
                field.Type = TType.Byte;
                field.ID = 47;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Add_bed_num);
                oprot.WriteFieldEnd();
            }
            if (Op_ip != null && __isset.op_ip)
            {
                field.Name = "op_ip";
                field.Type = TType.String;
                field.ID = 48;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Op_ip);
                oprot.WriteFieldEnd();
            }
            if (Hotel_confirm_num != null && __isset.hotel_confirm_num)
            {
                field.Name = "hotel_confirm_num";
                field.Type = TType.String;
                field.ID = 49;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Hotel_confirm_num);
                oprot.WriteFieldEnd();
            }
            if (__isset.additional_status)
            {
                field.Name = "additional_status";
                field.Type = TType.I32;
                field.ID = 50;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32(Additional_status);
                oprot.WriteFieldEnd();
            }
            if (__isset.hotel_credit)
            {
                field.Name = "hotel_credit";
                field.Type = TType.I16;
                field.ID = 51;
                oprot.WriteFieldBegin(field);
                oprot.WriteI16(Hotel_credit);
                oprot.WriteFieldEnd();
            }
            if (__isset.additional_statusI)
            {
                field.Name = "additional_statusI";
                field.Type = TType.I32;
                field.ID = 52;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32(Additional_statusI);
                oprot.WriteFieldEnd();
            }
            if (__isset.Room_Credit)
            {
                field.Name = "Room_Credit";
                field.Type = TType.Byte;
                field.ID = 53;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Room_Credit);
                oprot.WriteFieldEnd();
            }
            if (Guest_Info != null && __isset.Guest_Info)
            {
                field.Name = "Guest_Info";
                field.Type = TType.String;
                field.ID = 54;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Guest_Info);
                oprot.WriteFieldEnd();
            }
            if (__isset.gage_status)
            {
                field.Name = "gage_status";
                field.Type = TType.Byte;
                field.ID = 55;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Gage_status);
                oprot.WriteFieldEnd();
            }
            if (Halfday_price != null && __isset.halfday_price)
            {
                field.Name = "halfday_price";
                field.Type = TType.String;
                field.ID = 56;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Halfday_price);
                oprot.WriteFieldEnd();
            }
            if (Halfday_sign_price != null && __isset.halfday_sign_price)
            {
                field.Name = "halfday_sign_price";
                field.Type = TType.String;
                field.ID = 57;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Halfday_sign_price);
                oprot.WriteFieldEnd();
            }
            if (Gs_es != null && __isset.gs_es)
            {
                field.Name = "gs_es";
                field.Type = TType.String;
                field.ID = 58;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Gs_es);
                oprot.WriteFieldEnd();
            }
            if (__isset.gp_settle_status)
            {
                field.Name = "gp_settle_status";
                field.Type = TType.Byte;
                field.ID = 59;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Gp_settle_status);
                oprot.WriteFieldEnd();
            }
            if (Guest_country != null && __isset.guest_country)
            {
                field.Name = "guest_country";
                field.Type = TType.String;
                field.ID = 60;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Guest_country);
                oprot.WriteFieldEnd();
            }
            if (__isset.guest_num)
            {
                field.Name = "guest_num";
                field.Type = TType.I32;
                field.ID = 61;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32(Guest_num);
                oprot.WriteFieldEnd();
            }
            if (__isset.payment_way)
            {
                field.Name = "payment_way";
                field.Type = TType.Byte;
                field.ID = 62;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Payment_way);
                oprot.WriteFieldEnd();
            }
            if (__isset.payhotel_status)
            {
                field.Name = "payhotel_status";
                field.Type = TType.Byte;
                field.ID = 63;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Payhotel_status);
                oprot.WriteFieldEnd();
            }
            if (Trans_num != null && __isset.trans_num)
            {
                field.Name = "trans_num";
                field.Type = TType.String;
                field.ID = 64;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Trans_num);
                oprot.WriteFieldEnd();
            }
            if (__isset.order_from)
            {
                field.Name = "order_from";
                field.Type = TType.I32;
                field.ID = 65;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32(Order_from);
                oprot.WriteFieldEnd();
            }
            if (__isset.price_source_type)
            {
                field.Name = "price_source_type";
                field.Type = TType.Byte;
                field.ID = 66;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Price_source_type);
                oprot.WriteFieldEnd();
            }
            if (__isset.room_num_type)
            {
                field.Name = "room_num_type";
                field.Type = TType.Byte;
                field.ID = 67;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Room_num_type);
                oprot.WriteFieldEnd();
            }
            if (Hotel_price_statu != null && __isset.hotel_price_statu)
            {
                field.Name = "hotel_price_statu";
                field.Type = TType.String;
                field.ID = 68;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Hotel_price_statu);
                oprot.WriteFieldEnd();
            }
            if (Room_unique_id != null && __isset.room_unique_id)
            {
                field.Name = "room_unique_id";
                field.Type = TType.String;
                field.ID = 69;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Room_unique_id);
                oprot.WriteFieldEnd();
            }
            if (Credit_Card_No != null && __isset.Credit_Card_No)
            {
                field.Name = "Credit_Card_No";
                field.Type = TType.String;
                field.ID = 70;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Credit_Card_No);
                oprot.WriteFieldEnd();
            }
            if (__isset.Phone_Type)
            {
                field.Name = "Phone_Type";
                field.Type = TType.Byte;
                field.ID = 71;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Phone_Type);
                oprot.WriteFieldEnd();
            }
            if (__isset.Contacter_Mobile_Type)
            {
                field.Name = "Contacter_Mobile_Type";
                field.Type = TType.Byte;
                field.ID = 72;
                oprot.WriteFieldBegin(field);
                oprot.WriteByte(Contacter_Mobile_Type);
                oprot.WriteFieldEnd();
            }
            oprot.WriteFieldStop();
            oprot.WriteStructEnd();
        }

        public override string ToString()
        {
            StringBuilder sb = new StringBuilder("Reserve(");
            sb.Append("Reser_no: ");
            sb.Append(Reser_no);
            sb.Append(",Card_no: ");
            sb.Append(Card_no);
            sb.Append(",Hotel_id: ");
            sb.Append(Hotel_id);
            sb.Append(",Room_type_id: ");
            sb.Append(Room_type_id);
            sb.Append(",Arrive_date: ");
            sb.Append(Arrive_date);
            sb.Append(",Leave_date: ");
            sb.Append(Leave_date);
            sb.Append(",Time_early: ");
            sb.Append(Time_early);
            sb.Append(",Time_late: ");
            sb.Append(Time_late);
            sb.Append(",Num_room: ");
            sb.Append(Num_room);
            sb.Append(",Currency_ID: ");
            sb.Append(Currency_ID);
            sb.Append(",Add_bed: ");
            sb.Append(Add_bed);
            sb.Append(",Guest_name: ");
            sb.Append(Guest_name);
            sb.Append(",Guest_type: ");
            sb.Append(Guest_type);
            sb.Append(",Guest_sex: ");
            sb.Append(Guest_sex);
            sb.Append(",Contacter: ");
            sb.Append(Contacter);
            sb.Append(",Contacter_mobile: ");
            sb.Append(Contacter_mobile);
            sb.Append(",Contacter_sex: ");
            sb.Append(Contacter_sex);
            sb.Append(",Reser_status: ");
            sb.Append(Reser_status);
            sb.Append(",Reser_status1: ");
            sb.Append(Reser_status1);
            sb.Append(",Settle_status: ");
            sb.Append(Settle_status);
            sb.Append(",Print_status: ");
            sb.Append(Print_status);
            sb.Append(",Fax_status: ");
            sb.Append(Fax_status);
            sb.Append(",Email: ");
            sb.Append(Email);
            sb.Append(",Fax: ");
            sb.Append(Fax);
            sb.Append(",Phone: ");
            sb.Append(Phone);
            sb.Append(",Confirm_method: ");
            sb.Append(Confirm_method);
            sb.Append(",Confirm_client: ");
            sb.Append(Confirm_client);
            sb.Append(",Confirm_date: ");
            sb.Append(Confirm_date);
            sb.Append(",Other: ");
            sb.Append(Other);
            sb.Append(",Other_enable: ");
            sb.Append(Other_enable);
            sb.Append(",Op_user: ");
            sb.Append(Op_user);
            sb.Append(",Op_date: ");
            sb.Append(Op_date);
            sb.Append(",Es: ");
            sb.Append(Es);
            sb.Append(",Payment: ");
            sb.Append(Payment);
            sb.Append(",Inspector: ");
            sb.Append(Inspector);
            sb.Append(",Lastchecked_date: ");
            sb.Append(Lastchecked_date);
            sb.Append(",Amendor: ");
            sb.Append(Amendor);
            sb.Append(",Amend_date: ");
            sb.Append(Amend_date);
            sb.Append(",Sum_price: ");
            sb.Append(Sum_price);
            sb.Append(",Sum_sign: ");
            sb.Append(Sum_sign);
            sb.Append(",Num_night: ");
            sb.Append(Num_night);
            sb.Append(",Room_no: ");
            sb.Append(Room_no);
            sb.Append(",Arrive_now: ");
            sb.Append(Arrive_now);
            sb.Append(",Price_changed: ");
            sb.Append(Price_changed);
            sb.Append(",Double_credit: ");
            sb.Append(Double_credit);
            sb.Append(",Add_bed_price: ");
            sb.Append(Add_bed_price);
            sb.Append(",Add_bed_num: ");
            sb.Append(Add_bed_num);
            sb.Append(",Op_ip: ");
            sb.Append(Op_ip);
            sb.Append(",Hotel_confirm_num: ");
            sb.Append(Hotel_confirm_num);
            sb.Append(",Additional_status: ");
            sb.Append(Additional_status);
            sb.Append(",Hotel_credit: ");
            sb.Append(Hotel_credit);
            sb.Append(",Additional_statusI: ");
            sb.Append(Additional_statusI);
            sb.Append(",Room_Credit: ");
            sb.Append(Room_Credit);
            sb.Append(",Guest_Info: ");
            sb.Append(Guest_Info);
            sb.Append(",Gage_status: ");
            sb.Append(Gage_status);
            sb.Append(",Halfday_price: ");
            sb.Append(Halfday_price);
            sb.Append(",Halfday_sign_price: ");
            sb.Append(Halfday_sign_price);
            sb.Append(",Gs_es: ");
            sb.Append(Gs_es);
            sb.Append(",Gp_settle_status: ");
            sb.Append(Gp_settle_status);
            sb.Append(",Guest_country: ");
            sb.Append(Guest_country);
            sb.Append(",Guest_num: ");
            sb.Append(Guest_num);
            sb.Append(",Payment_way: ");
            sb.Append(Payment_way);
            sb.Append(",Payhotel_status: ");
            sb.Append(Payhotel_status);
            sb.Append(",Trans_num: ");
            sb.Append(Trans_num);
            sb.Append(",Order_from: ");
            sb.Append(Order_from);
            sb.Append(",Price_source_type: ");
            sb.Append(Price_source_type);
            sb.Append(",Room_num_type: ");
            sb.Append(Room_num_type);
            sb.Append(",Hotel_price_statu: ");
            sb.Append(Hotel_price_statu);
            sb.Append(",Room_unique_id: ");
            sb.Append(Room_unique_id);
            sb.Append(",Credit_Card_No: ");
            sb.Append(Credit_Card_No);
            sb.Append(",Phone_Type: ");
            sb.Append(Phone_Type);
            sb.Append(",Contacter_Mobile_Type: ");
            sb.Append(Contacter_Mobile_Type);
            sb.Append(")");
            return sb.ToString();
        }

    }


}